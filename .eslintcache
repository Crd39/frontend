[{"E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\index.js":"1","E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\home.js":"2","E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\login.js":"3","E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\signup.js":"4","E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\app.js":"5","E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\profile.js":"6","E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\components\\user\\user.js":"7","E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\components\\content\\content.js":"8","E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\components\\comment\\comment.js":"9"},{"size":865,"mtime":1608186558592,"results":"10","hashOfConfig":"11"},{"size":3540,"mtime":1608277171904,"results":"12","hashOfConfig":"11"},{"size":2039,"mtime":1608275872617,"results":"13","hashOfConfig":"11"},{"size":1874,"mtime":1608275879534,"results":"14","hashOfConfig":"11"},{"size":2235,"mtime":1608277655539,"results":"15","hashOfConfig":"11"},{"size":1920,"mtime":1608275876237,"results":"16","hashOfConfig":"11"},{"size":4362,"mtime":1608275917080,"results":"17","hashOfConfig":"11"},{"size":3930,"mtime":1608278241563,"results":"18","hashOfConfig":"11"},{"size":3100,"mtime":1608278157553,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"qaahx7",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\index.js",[],["40","41"],"E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\home.js",["42"],"import React from 'react';\r\n\r\nimport './css/home.css';\r\n\r\nimport { url } from './app.js';\r\n\r\nexport class Home extends React.Component {\r\n    handleLogOut() {\r\n        window.localStorage['token'] = '';\r\n        window.location.replace('/login');\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n          <div>\r\n            <button onClick={() => {this.handleLogOut()}}>\r\n                logout\r\n            </button>\r\n            <PostContent />\r\n\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n// data: [url]\r\nexport class PreviewImages extends React.Component {\r\n    render() {\r\n        const imagelist = this.props.data.map((url) => <img className='Preview' src={url} />)\r\n        return (\r\n          <div className='PreviewImages'>\r\n            Preview Images\r\n            {imagelist}\r\n          </div>\r\n        ); \r\n    }\r\n}\r\n\r\nclass PostContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            text: '',\r\n            images: [],\r\n            urls: []\r\n        };\r\n    }\r\n    \r\n    handleSubmit() {\r\n        console.log('called');\r\n        const data = new FormData()\r\n        data.append('title', '');\r\n        data.append('text', this.state.text);\r\n        this.state.images.forEach((image) => {\r\n            data.append('images',image);\r\n        });\r\n        \r\n        const token = window.localStorage['token'];\r\n        \r\n        fetch(url + '/contents', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': token\r\n            },\r\n            body: data\r\n        })\r\n        .then((response) => (response.json()))\r\n        .then((info) => {\r\n            console.log(info);\r\n            if(info.status === 'success') {\r\n                console.log('Post succeed');\r\n                window.location.replace('/');\r\n            }\r\n            else {\r\n                console.log('Post failed');\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n    \r\n    handleTextChange(event) {\r\n        this.setState({\r\n            text: event.target.value,\r\n            images: this.state.images,\r\n            urls: this.state.urls\r\n        });    \r\n    }\r\n    \r\n    handleImageChange(event) {\r\n        const newImages = this.state.images;\r\n        newImages.push(event.target.files[0]);\r\n        const newUrls = this.state.urls;\r\n        newUrls.push(URL.createObjectURL(event.target.files[0]));\r\n        this.setState({\r\n            text: this.state.text,\r\n            images: newImages, \r\n            urls: newUrls\r\n        }); \r\n        console.log(this.state.images);\r\n        console.log(this.state.urls);\r\n        event.target.value = null;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className='PostContent'>\r\n            <div>Post Content</div>\r\n            <form onSubmit={(event) => {\r\n                event.preventDefault();\r\n                this.handleSubmit()\r\n            }}>\r\n            <label>\r\n              <div>\r\n                text\r\n                <input type=\"text\" value={this.state.text} onChange={(event) => this.handleTextChange(event)} />\r\n              </div>\r\n              <PreviewImages data={this.state.urls}/>\r\n              <div>\r\n                image\r\n                <input type=\"file\" value={this.state.image} onChange={(event) => this.handleImageChange(event)} />\r\n              </div>\r\n            </label>\r\n            <input type=\"submit\" value=\"submit\" />\r\n            </form>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\n","E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\login.js",[],"E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\signup.js",[],"E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\app.js",["43"],"E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\profile.js",["44","45"],"E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\components\\user\\user.js",[],"E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\components\\content\\content.js",["46","47","48","49","50"],"E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\components\\comment\\comment.js",["51"],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":29,"column":56,"nodeType":"58","endLine":29,"endColumn":93},{"ruleId":"59","severity":1,"message":"60","line":6,"column":3,"nodeType":"61","messageId":"62","endLine":6,"endColumn":7},{"ruleId":"59","severity":1,"message":"60","line":6,"column":3,"nodeType":"61","messageId":"62","endLine":6,"endColumn":7},{"ruleId":"59","severity":1,"message":"63","line":7,"column":3,"nodeType":"61","messageId":"62","endLine":7,"endColumn":12},{"ruleId":"59","severity":1,"message":"64","line":3,"column":9,"nodeType":"61","messageId":"62","endLine":3,"endColumn":18},{"ruleId":"59","severity":1,"message":"65","line":3,"column":20,"nodeType":"61","messageId":"62","endLine":3,"endColumn":27},{"ruleId":"56","severity":1,"message":"57","line":56,"column":64,"nodeType":"58","endLine":56,"endColumn":102},{"ruleId":"66","severity":1,"message":"67","line":75,"column":27,"nodeType":"68","messageId":"69","endLine":75,"endColumn":29},{"ruleId":"70","severity":1,"message":"71","line":135,"column":5,"nodeType":"72","messageId":"73","endLine":137,"endColumn":6},{"ruleId":"66","severity":1,"message":"74","line":21,"column":18,"nodeType":"68","messageId":"69","endLine":21,"endColumn":20},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'LargeUser' is defined but never used.","'MedUser' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]