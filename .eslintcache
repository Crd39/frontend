[{"E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\index.js":"1","E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\home.js":"2","E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\login.js":"3","E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\signup.js":"4","E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\app.js":"5","E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\profile.js":"6","E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\components\\user\\user.js":"7","E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\components\\content\\content.js":"8","E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\components\\comment\\comment.js":"9"},{"size":865,"mtime":1608186558592,"results":"10","hashOfConfig":"11"},{"size":2224,"mtime":1608370684647,"results":"12","hashOfConfig":"11"},{"size":2039,"mtime":1608275872617,"results":"13","hashOfConfig":"11"},{"size":1874,"mtime":1608275879534,"results":"14","hashOfConfig":"11"},{"size":2446,"mtime":1608368636504,"results":"15","hashOfConfig":"11"},{"size":6330,"mtime":1608367253161,"results":"16","hashOfConfig":"11"},{"size":7329,"mtime":1608372368304,"results":"17","hashOfConfig":"11"},{"size":7601,"mtime":1608370658209,"results":"18","hashOfConfig":"11"},{"size":3100,"mtime":1608358334240,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"qaahx7",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},"E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\index.js",[],["40","41"],"E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\home.js",[],"E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\login.js",[],"E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\signup.js",[],"E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\app.js",["42"],"E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\profile.js",["43","44","45","46"],"E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\components\\user\\user.js",["47","48"],"E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\components\\content\\content.js",["49","50","51","52","53","54"],"E:\\atree\\2.7\\服务计算\\frontend\\fake\\src\\components\\comment\\comment.js",["55"],"import React from 'react';\n\nimport { SmallUser } from '../user/user.js';\n\nimport './comment.css'\n\nimport { url } from '../../app.js';\n\n// data: contentID\nexport class PostComment extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            text: \"\"\n        };\n    }\n    \n    handleSubmit() {\n        const token = window.localStorage['token'];\n        if(token != undefined && token != null) {\n            fetch(url + '/comments', {\n                method: 'POST',\n                headers: {\n                    'Authorization': token\n                }, \n                body: JSON.stringify({\n                    contentID: this.props.data, \n                    text: this.state.text\n                })\n            })\n            .then((response) => (response.json()))\n            .then((info) => {\n                if(info.status === 'success') {\n                    console.log('post comment succeed');\n                }\n                else {\n                    console.log('post comment');\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        }\n    }\n    \n    handleTextChange(event) {\n        this.setState({\n           text: event.target.value \n        });\n    }\n    \n    render() {\n        return (\n          <div>\n            Post Comment\n            <form onSubmit={(event) => {\n                // event.preventDefault();\n                this.handleSubmit()\n            }}>\n            <label>\n              <div>\n                text\n                <input type=\"text\" value={this.state.text} onChange={(event) => this.handleTextChange(event)} />\n              </div>\n            </label>\n            <input type=\"submit\" value=\"submit\" />\n            </form>\n          </div>\n        );\n    }\n}\n\n// data: [contentID]\nexport class Comments extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            comments: null\n        }\n        this.FetchData();\n    }\n    \n    FetchData() {\n        fetch(url + '/comments?contentID=' + this.props.data, {\n            method: 'GET',\n        })\n        .then((response) => (response.json()))\n        .then((info) => {\n            console.log(info);\n            this.setState({ comments: info });\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n    \n    render() {\n        if(this.state.comments!=null){\n            const commentlist = this.state.comments.map((comment, key) => <Comment data={comment} key={key}/>);\n            return (\n              <div>\n                {commentlist}\n              </div>\n            );\n        }\n        else{\n            return (\n              <div>\n              loading\n              </div>\n            );\n        }\n    }\n}\n\n// data: comment\nexport class Comment extends React.Component{\n    render() {\n        return (\n          <div className='Comment'>\n            <SmallUser data={this.props.data.creator} />\n            <div>{this.props.data.text}</div> \n          </div>\n        );\n    }\n}\n",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":6,"column":3,"nodeType":"62","messageId":"63","endLine":6,"endColumn":7},{"ruleId":"60","severity":1,"message":"61","line":6,"column":3,"nodeType":"62","messageId":"63","endLine":6,"endColumn":7},{"ruleId":"60","severity":1,"message":"64","line":7,"column":3,"nodeType":"62","messageId":"63","endLine":7,"endColumn":12},{"ruleId":"65","severity":1,"message":"66","line":83,"column":41,"nodeType":"67","messageId":"68","endLine":83,"endColumn":43},{"ruleId":"69","severity":1,"message":"70","line":205,"column":15,"nodeType":"71","endLine":205,"endColumn":46},{"ruleId":"65","severity":1,"message":"66","line":29,"column":27,"nodeType":"67","messageId":"68","endLine":29,"endColumn":29},{"ruleId":"65","severity":1,"message":"66","line":29,"column":64,"nodeType":"67","messageId":"68","endLine":29,"endColumn":66},{"ruleId":"60","severity":1,"message":"72","line":3,"column":9,"nodeType":"62","messageId":"63","endLine":3,"endColumn":18},{"ruleId":"60","severity":1,"message":"73","line":3,"column":20,"nodeType":"62","messageId":"63","endLine":3,"endColumn":27},{"ruleId":"69","severity":1,"message":"70","line":16,"column":56,"nodeType":"71","endLine":16,"endColumn":93},{"ruleId":"69","severity":1,"message":"70","line":166,"column":64,"nodeType":"71","endLine":166,"endColumn":102},{"ruleId":"65","severity":1,"message":"66","line":186,"column":27,"nodeType":"67","messageId":"68","endLine":186,"endColumn":29},{"ruleId":"74","severity":1,"message":"75","line":262,"column":5,"nodeType":"76","messageId":"77","endLine":264,"endColumn":6},{"ruleId":"65","severity":1,"message":"78","line":21,"column":18,"nodeType":"67","messageId":"68","endLine":21,"endColumn":20},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'LargeUser' is defined but never used.","'MedUser' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]